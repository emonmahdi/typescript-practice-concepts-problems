class Father {
    showInfo():void{
        console.log('Father')
    }
}

class Son1 extends Father{
    showInfo(): void {
        console.log('Son 1')
    }
}

class Son2 extends Father{
    showInfo(): void {
        console.log("Son 2")
    }
}

function show(params: Father){
    params.showInfo()
}

const x = new Father()
const y = new Son1()
const z = new Son2()

show(x)
show(y)
show(z)




/* 
ржарж┐ржХ ржЖржЫрзЗ! ржПржХржжржо рж╕рж╣ржЬ ржмрж╛ржВрж▓рж╛рзЯ, ржЫрзЛржЯ ржЫрзЛржЯ ржзрж╛ржкрзЗ ржмрзБржЭрж┐ред

# ржкрж▓рж┐ржорж░ржлрж┐ржЬржо (Polymorphism) ржХрзА?

**ржПржХржЗ ржЯрж╛ржЗржк (parent/interface) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржнрж┐ржирзНржи ржнрж┐ржирзНржи ржЕржмржЬрзЗржХрзНржЯржХрзЗ ржПржХржЗржнрж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛**тАФржХрж┐ржирзНрждрзБ ржлрж▓ ржнрж┐ржирзНржи рж╣рзЯред
ржорж╛ржирзЗ: **ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи/ржорзЗржержбтАУржнрж┐рждрж░рзЗ ржЖрж▓рж╛ржжрж╛ ржЖрж▓рж╛ржжрж╛ ржХрзНрж▓рж╛рж╕ ржХрж╛ржЬ ржХрж░рзЗ**ред

---

## ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзБржЭрж┐

1. ржПржХржЯрж╛ **Parent ржЯрж╛ржЗржк** ржмрж╛ **Interface** ржмрж╛ржирж╛ржЗ
2. ржХрзЯрзЗржХржЯрж╛ **Child ржХрзНрж▓рж╛рж╕** рж╕рзЗржЯрж╛ **extend/implement** ржХрж░рзЗ
3. рж╕ржмрж╛рж░ **ржПржХржЗ ржирж╛ржорзЗрж░ ржорзЗржержб** ржерж╛ржХрзЗ (ржпрзЗржоржи `draw()` ржмрж╛ `pay()`)
4. ржПржХржЯрж╛ **ржлрж╛ржВрж╢ржи** ржмрж╛ржирж╛ржЗ ржпрзЗржЯрж╛ **Parent ржЯрж╛ржЗржк** ржирзЗрзЯ
5. ржПржЦржи ржУржЗ ржлрж╛ржВрж╢ржирзЗ ржпрзЗржХрзЛржирзЛ **Child ржЕржмржЬрзЗржХрзНржЯ** ржжрж┐рж▓рзЗржЗ ржЪрж▓ржмрзЗтАФ**ржлрж▓ ржЖрж▓рж╛ржжрж╛ рж╣ржмрзЗ**

---

## ржЦрзБржм ржЫрзЛржЯ ржЙржжрж╛рж╣рж░ржг: Shape ЁЯОи

```ts
class Shape {
  draw(): void { console.log("Drawing a shape"); }
}

class Circle extends Shape {
  draw(): void { console.log("Drawing a circle"); }
}

class Rectangle extends Shape {
  draw(): void { console.log("Drawing a rectangle"); }
}

function render(s: Shape) {
  s.draw();
}

render(new Circle());    // Drawing a circle
render(new Rectangle()); // Drawing a rectangle
```

**ржмрзНржпрж╛ржЦрзНржпрж╛:** `render()` рж╢рзБржзрзБ `Shape` ржЪрзЗржирзЗ, ржХрж┐ржирзНрждрзБ `Circle/Rectangle` ржжрж┐рж▓рзЗ ржирж┐ржЬ ржирж┐ржЬ `draw()` ржЪрж▓рзЗржЫрзЗтАФржПржЯрж╛ржЗ ржкрж▓рж┐ржорж░ржлрж┐ржЬржоред

---

## рж░рж┐рзЯрж╛рж▓-рж▓рж╛ржЗржл ржЙржжрж╛рж╣рж░ржг: Payment ЁЯТ│ (bKash, Card, PayPal)

```ts
interface Payment {
  pay(amount: number): void;
}

class BkashPayment implements Payment {
  pay(amount: number): void { console.log(`bKash: ${amount} ржЯрж╛ржХрж╛ ржкрзЗржорзЗржирзНржЯ рж╣рж▓рзЛ`); }
}

class CardPayment implements Payment {
  pay(amount: number): void { console.log(`Card: ${amount} ржЯрж╛ржХрж╛ ржкрзЗржорзЗржирзНржЯ рж╣рж▓рзЛ`); }
}

function checkout(p: Payment, amount: number) {
  p.pay(amount);
}

checkout(new BkashPayment(), 500); // bKash...
checkout(new CardPayment(), 800);  // Card...
```

**ржмрзНржпрж╛ржЦрзНржпрж╛:** `checkout()` рж╢рзБржзрзБ `Payment` ржЗржирзНржЯрж╛рж░ржлрзЗрж╕ ржЬрж╛ржирзЗтАФржХрж┐ржирзНрждрзБ ржпрзЗржХрзЛржирзЛ ржкрзЗржорзЗржирзНржЯ ржорзЗржержб ржХрж╛ржЬ ржХрж░рзЗред

---

## ржЖрж░рзЗржХржЯрж╛ рж░рж┐рзЯрж╛рж▓-рж▓рж╛ржЗржл ржЗржЙржЬ: Notification (Email/SMS) ЁЯУй

```ts
interface Notifier { send(msg: string): void; }

class EmailNotifier implements Notifier {
  send(msg: string): void { console.log(`Email: ${msg}`); }
}

class SMSNotifier implements Notifier {
  send(msg: string): void { console.log(`SMS: ${msg}`); }
}

function notify(n: Notifier, msg: string) {
  n.send(msg);
}

notify(new EmailNotifier(), "Order placed");
notify(new SMSNotifier(), "Order shipped");
```

---

## ржХрзЛржерж╛рзЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи?

* **ржкрзЗржорзЗржирзНржЯ ржЧрзЗржЯржУрзЯрзЗ:** bKash/Card/PayPal тЖТ `pay()`
* **ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо:** Email/SMS/Push тЖТ `send()`
* **ржлрж╛ржЗрж▓ рж╣рзНржпрж╛ржирзНржбрж▓рж┐ржВ:** PDF/Image/Text тЖТ `open()/read()`
* **UI ржХржорзНржкрзЛржирзЗржирзНржЯ:** Button/Input/Select тЖТ `render()`

---

## ржПржХ рж▓рж╛ржЗржирзЗрж░ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЯрзНрж░рж┐ржХ

**тАЬржПржХржЯрж╛ common ржЯрж╛ржЗржк, ржЕржирзЗржХ рж░ржХржо ржЕржмржЬрзЗржХрзНржЯтАФржлрж╛ржВрж╢ржи ржПржХржЯрж╛ржЗ, ржЖржЪрж░ржг ржнрж┐ржирзНржиредтАЭ**

ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ **React + TypeScript** ржжрж┐рзЯрзЗ ржЫрзЛржЯ ржПржХржЯрж╛ Notification ржбрзЗржорзЛржУ ржмрж╛ржирж┐рзЯрзЗ ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рж┐ред




*/